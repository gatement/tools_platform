<!DOCTYPE html>
	<html>
		<head>
			<title>UserEdit - Admin - Tools</title>
			<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
			<link type="text/css" rel="stylesheet" href="/css/admin/user_edit.css" />
			<script type="text/javascript" src="/js/lib/jquery-1.10.0.min.js"></script>
			<script type="text/javascript" src="/js/lib/jquery.validate.min.js"></script>
			<script type="text/javascript" src="/js/admin/user_edit.js"></script>
		</head>
		<body>
			<h3>Edit User</h3>
			<div id="content">
				<form id="editUserForm" action="/user/update_all" method="post">
					<div>
						<input type="hidden" id="id" name="id" 
							<erl>
								-include("tools_platform.hrl").
								out(Arg) ->									
									Vals = yaws_api:parse_query(Arg),	
									Id = proplists:get_value("id", Vals),

									{html, io_lib:format("value=\"~s\"", [Id])}.
							</erl> />
						<label for="id_textbox" class="fieldTitle"> Id </label>
						<input class="textbox required" type="text" disabled="disabled" id="id_textbox" name="id_textbox"
							<erl>
								-include("tools_platform.hrl").
								out(Arg) ->									
									Vals = yaws_api:parse_query(Arg),	
									Id = proplists:get_value("id", Vals),

									{html, io_lib:format("value=\"~s\"", [Id])}.
							</erl> />
					</div>
					<div>
						<label for="namae" class="fieldTitle"> Name </label>
						<input class="textbox required" type="text" id="name" name="name"
							<erl>
								-include("tools_platform.hrl").
								out(Arg) ->								
									Vals = yaws_api:parse_query(Arg),	
									Id = proplists:get_value("id", Vals),

									User = model_usr_user:get(Id),

									{html, io_lib:format("value=\"~s\"", [User#usr_user.name])}.
							</erl> />
					</div>
					<div>
						<label for="email" class="fieldTitle"> Email </label>
						<input class="textbox required email" type="text" id="email" name="email"
							<erl>
								-include("tools_platform.hrl").
								out(Arg) ->	
									Vals = yaws_api:parse_query(Arg),	
									Id = proplists:get_value("id", Vals),

									User = model_usr_user:get(Id),

									{html, io_lib:format("value=\"~s\"", [User#usr_user.email])}.
							</erl> />
					</div>
					<div>
						<label for="enabled" class="padding">
							<input type="checkbox" id="enabled" name="enabled" value="true"
								<erl>
									-include("tools_platform.hrl").
									out(Arg) ->
										Vals = yaws_api:parse_query(Arg),
										Id = proplists:get_value("id", Vals),

										User = model_usr_user:get(Id),

										Val = case User#usr_user.enabled of
											true -> "checked=\"checked\"";
											false -> ""
										end,

										{html, Val}.
								</erl> />
						 Enabled </label>							
					</div>
					<div>
						<label for="admin" class="padding">
							<input type="checkbox" id="admin" name="admin" value="true"
								<erl>
									-include("tools_platform.hrl").
									out(Arg) ->
										Vals = yaws_api:parse_query(Arg),
										Id = proplists:get_value("id", Vals),

										User = model_usr_user:get(Id),

										Val = case User#usr_user.admin of
											true -> "checked=\"checked\"";
											false -> ""
										end,

										{html, Val}.
								</erl> />
						 Admin </label>							
					</div>
					<div>
						<label for="note" class="padding">
							<input type="checkbox" id="note" name="note" value="true"
								<erl>
									-include("tools_platform.hrl").
									out(Arg) ->
										Vals = yaws_api:parse_query(Arg),
										Id = proplists:get_value("id", Vals),

										Val = case model_usr_preference:get(Id, ?USR_PREFERENCE_NOTE_ENABLED) of
											true -> "checked=\"checked\"";
											false -> ""
										end,

										{html, Val}.
								</erl> />
						 Note(tool) </label>							
					</div>
					<div>
						<label for="word" class="padding">
							<input type="checkbox" id="word" name="word" value="true"
								<erl>
									-include("tools_platform.hrl").
									out(Arg) ->
										Vals = yaws_api:parse_query(Arg),
										Id = proplists:get_value("id", Vals),

										Val = case model_usr_preference:get(Id, ?USR_PREFERENCE_WORD_ENABLED) of
											true -> "checked=\"checked\"";
											false -> ""
										end,

										{html, Val}.
								</erl> />
						 Word(tool) </label>							
					</div>
					<div>
						<label for="gallery" class="padding">
							<input type="checkbox" id="gallery" name="gallery" value="true"
								<erl>
									-include("tools_platform.hrl").
									out(Arg) ->
										Vals = yaws_api:parse_query(Arg),
										Id = proplists:get_value("id", Vals),

										Val = case model_usr_preference:get(Id, ?USR_PREFERENCE_GALLERY_ENABLED) of
											true -> "checked=\"checked\"";
											false -> ""
										end,

										{html, Val}.
								</erl> />
						 Gallery(tool) </label>							
					</div>
					<div>
						<label for="monitor" class="padding">
							<input type="checkbox" id="monitor" name="monitor" value="true"
								<erl>
									-include("tools_platform.hrl").
									out(Arg) ->
										Vals = yaws_api:parse_query(Arg),
										Id = proplists:get_value("id", Vals),

										Val = case model_usr_preference:get(Id, ?USR_PREFERENCE_MONITOR_ENABLED) of
											true -> "checked=\"checked\"";
											false -> ""
										end,

										{html, Val}.
								</erl> />
						 Monitor(tool) </label>							
					</div>
					<div>
						<label for="device" class="padding">
							<input type="checkbox" id="device" name="device" value="true"
								<erl>
									-include("tools_platform.hrl").
									out(Arg) ->
										Vals = yaws_api:parse_query(Arg),
										Id = proplists:get_value("id", Vals),

										Val = case model_usr_preference:get(Id, ?USR_PREFERENCE_DEVICE_ENABLED) of
											true -> "checked=\"checked\"";
											false -> ""
										end,

										{html, Val}.
								</erl> />
						 Device(tool) </label>							
					</div>
					<div class="padding">
						<input id="submit" type="submit" value="Save" />
					</div>
					<div class="padding">
						<span class="msg">
							<erl>
								out(Arg) ->	
									QueryVals = yaws_api:parse_query(Arg),
									Msg = case proplists:get_value("msg", QueryVals) of
										undefined -> "";
										Val -> Val
									end,
									{html, Msg}.
							</erl>
						</span>
					</div>
				</form>
			</div>
		</body>
	</html>
